"use client";

import { motion, useInView, useMotionValue, useSpring, animate } from "framer-motion";
import { useRef, useState, useEffect } from "react";

function AnimatedCounter({ value, delay = 0, suffix = "" }: { value: number; delay?: number; suffix?: string }) {
  const ref = useRef<HTMLSpanElement>(null);
  const inView = useInView(ref, { once: true, margin: "-50px" });
  const motionValue = useMotionValue(0);
  const springValue = useSpring(motionValue, { stiffness: 100, damping: 30 });
  const [displayValue, setDisplayValue] = useState(0);

  useEffect(() => {
    if (inView) {
      const controls = animate(motionValue, value, { 
        duration: 2, 
        delay: delay,
        ease: "easeOut" 
      });
      return () => controls.stop();
    }
  }, [inView, motionValue, value, delay]);

  useEffect(() => {
    const unsubscribe = springValue.on("change", (latest) => {
      setDisplayValue(Math.round(latest));
    });
    return () => unsubscribe();
  }, [springValue]);

  return <span ref={ref}>{displayValue}{suffix}</span>;
}

function LegalDocumentCard({ document, index }: {
  document: {
    title: string;
    type: string;
    icon: string;
    description: string;
    color: string;
    requirements: string[];
    benefits: string[];
    downloadable: boolean;
  };
  index: number;
}) {
  const ref = useRef<HTMLDivElement>(null);
  const inView = useInView(ref, { once: true, margin: "-50px" });
  const [isHovered, setIsHovered] = useState(false);
  const [isExpanded, setIsExpanded] = useState(false);

  const colorClasses = {
    blue: "from-blue-400 to-cyan-500 border-blue-500/30 text-blue-600 bg-blue-500/10",
    green: "from-green-400 to-emerald-500 border-green-500/30 text-green-600 bg-green-500/10",
    purple: "from-purple-400 to-violet-500 border-purple-500/30 text-purple-600 bg-purple-500/10",
    orange: "from-orange-400 to-red-500 border-orange-500/30 text-orange-600 bg-orange-500/10",
    red: "from-red-400 to-pink-500 border-red-500/30 text-red-600 bg-red-500/10"
  };

  return (
    <motion.div
      ref={ref}
      initial={{ opacity: 0, y: 50, scale: 0.9 }}
      animate={inView ? { opacity: 1, y: 0, scale: 1 } : {}}
      transition={{ duration: 0.6, delay: index * 0.1, type: "spring" }}
      whileHover={{ y: -8, scale: 1.02 }}
      onHoverStart={() => setIsHovered(true)}
      onHoverEnd={() => setIsHovered(false)}
      className="group relative overflow-hidden rounded-3xl bg-gradient-to-br from-white/5 to-white/10 backdrop-blur-xl border border-white/10 shadow-xl hover:border-white/20 transition-all duration-500 cursor-pointer"
      onClick={() => setIsExpanded(!isExpanded)}
    >
      {/* Background Effects */}
      <div className="absolute inset-0">
        <motion.div
          className={`absolute inset-0 bg-gradient-to-br ${colorClasses[document.color as keyof typeof colorClasses].split(' ')[0]} ${colorClasses[document.color as keyof typeof colorClasses].split(' ')[1]} opacity-5 group-hover:opacity-12 transition-opacity duration-500 rounded-3xl`}
          animate={isHovered ? { scale: 1.05 } : { scale: 1 }}
          transition={{ duration: 0.5 }}
        />
        
        {/* Floating Particles */}
        {Array.from({ length: 4 }).map((_, i) => (
          <motion.div
            key={i}
            className={`absolute w-1.5 h-1.5 bg-gradient-to-r ${colorClasses[document.color as keyof typeof colorClasses].split(' ')[0]} ${colorClasses[document.color as keyof typeof colorClasses].split(' ')[1]} opacity-30 rounded-full`}
            animate={{
              x: [0, 20, 0],
              y: [0, -15, 0],
              opacity: [0.3, 0.7, 0.3],
            }}
            transition={{
              duration: 4 + i,
              repeat: Infinity,
              delay: i * 0.5,
            }}
            style={{
              left: `${15 + i * 20}%`,
              top: `${10 + i * 15}%`,
            }}
          />
        ))}
      </div>

      <div className="relative p-6">
        {/* Header */}
        <div className="flex items-start gap-4 mb-4">
          <motion.div
            whileHover={{ scale: 1.1, rotate: 10 }}
            className={`shrink-0 w-14 h-14 rounded-2xl bg-gradient-to-br ${colorClasses[document.color as keyof typeof colorClasses].split(' ')[0]} ${colorClasses[document.color as keyof typeof colorClasses].split(' ')[1]} flex items-center justify-center shadow-lg`}
          >
            <span className="text-xl">{document.icon}</span>
          </motion.div>
          
          <div className="flex-1 min-w-0">
            <motion.h3
              initial={{ opacity: 0, x: -20 }}
              animate={inView ? { opacity: 1, x: 0 } : {}}
              transition={{ delay: index * 0.1 + 0.3, duration: 0.6 }}
              className="text-lg font-bold text-foreground mb-1 leading-tight"
            >
              {document.title}
            </motion.h3>
            
            <motion.span
              initial={{ opacity: 0, x: -20 }}
              animate={inView ? { opacity: 1, x: 0 } : {}}
              transition={{ delay: index * 0.1 + 0.4, duration: 0.6 }}
              className={`inline-block px-2 py-1 rounded-lg ${colorClasses[document.color as keyof typeof colorClasses].split(' ')[4]} border ${colorClasses[document.color as keyof typeof colorClasses].split(' ')[2]} text-xs font-medium`}
            >
              {document.type}
            </motion.span>
          </div>

          {document.downloadable && (
            <motion.button
              whileHover={{ scale: 1.1 }}
              whileTap={{ scale: 0.9 }}
              className="p-2 rounded-lg bg-white/10 hover:bg-white/20 transition-colors"
            >
              <span className="text-lg">üìÑ</span>
            </motion.button>
          )}
        </div>

        {/* Description */}
        <motion.p
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ delay: index * 0.1 + 0.5, duration: 0.6 }}
          className="text-sm text-muted-foreground leading-relaxed mb-4"
        >
          {document.description}
        </motion.p>

        {/* Requirements */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ delay: index * 0.1 + 0.6, duration: 0.6 }}
          className="space-y-2 mb-4"
        >
          <h4 className="text-sm font-semibold text-foreground">–û—Å–Ω–æ–≤–Ω—ã–µ –ø—É–Ω–∫—Ç—ã:</h4>
          {document.requirements.slice(0, isExpanded ? document.requirements.length : 2).map((requirement, i) => (
            <motion.div
              key={requirement}
              initial={{ opacity: 0, x: -20 }}
              animate={inView ? { opacity: 1, x: 0 } : {}}
              transition={{ delay: index * 0.1 + 0.7 + i * 0.1, duration: 0.4 }}
              className="flex items-start gap-2"
            >
              <div className={`w-1.5 h-1.5 bg-gradient-to-r ${colorClasses[document.color as keyof typeof colorClasses].split(' ')[0]} ${colorClasses[document.color as keyof typeof colorClasses].split(' ')[1]} rounded-full mt-1.5 animate-pulse`} />
              <span className="text-xs text-muted-foreground leading-relaxed">{requirement}</span>
            </motion.div>
          ))}
        </motion.div>

        {/* Expandable Benefits */}
        <motion.div
          initial={false}
          animate={{ height: isExpanded ? 'auto' : 0, opacity: isExpanded ? 1 : 0 }}
          transition={{ duration: 0.3 }}
          className="overflow-hidden"
        >
          <div className="pt-4 border-t border-white/10">
            <h4 className="text-sm font-semibold text-foreground mb-3">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</h4>
            <div className="space-y-2">
              {document.benefits.map((benefit, i) => (
                <motion.div
                  key={benefit}
                  initial={{ opacity: 0, x: -20 }}
                  animate={isExpanded ? { opacity: 1, x: 0 } : {}}
                  transition={{ delay: i * 0.1, duration: 0.4 }}
                  className="flex items-start gap-2"
                >
                  <div className={`w-1.5 h-1.5 bg-gradient-to-r ${colorClasses[document.color as keyof typeof colorClasses].split(' ')[0]} ${colorClasses[document.color as keyof typeof colorClasses].split(' ')[1]} rounded-full mt-1.5`} />
                  <span className="text-xs text-muted-foreground leading-relaxed">{benefit}</span>
                </motion.div>
              ))}
            </div>
          </div>
        </motion.div>

        {/* Expand Button */}
        <motion.button
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          className="mt-4 w-full py-2 px-4 rounded-xl bg-gradient-to-r from-white/5 to-white/10 border border-white/10 text-xs text-muted-foreground hover:text-foreground transition-colors"
        >
          {isExpanded ? '–°–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª–∏ ‚Üë' : '–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ ‚Üì'}
        </motion.button>
      </div>

      {/* Shine Effect */}
      <motion.div
        className="absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none"
        animate={isHovered ? { x: ['-100%', '100%'] } : {}}
        transition={{ duration: 1.5, ease: "easeInOut" }}
        style={{ transform: 'skewX(-20deg)' }}
      />
    </motion.div>
  );
}

function OnboardingProcess() {
  const ref = useRef<HTMLDivElement>(null);
  const inView = useInView(ref, { once: true, margin: "-50px" });

  const steps = [
    { id: 1, title: "–ó–∞—è–≤–∫–∞", desc: "–ü–µ—Ä–≤–∏—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", icon: "üìù", duration: "1 –¥–µ–Ω—å" },
    { id: 2, title: "–ê—É–¥–∏—Ç", desc: "–û—Å–º–æ—Ç—Ä –æ–±—ä–µ–∫—Ç–∞", icon: "üîç", duration: "2-3 –¥–Ω—è" },
    { id: 3, title: "–î–æ–≥–æ–≤–æ—Ä", desc: "–ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ", icon: "‚úçÔ∏è", duration: "1 –¥–µ–Ω—å" },
    { id: 4, title: "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞", desc: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º", icon: "‚öôÔ∏è", duration: "5-7 –¥–Ω–µ–π" },
    { id: 5, title: "–ó–∞–ø—É—Å–∫", desc: "–ü–µ—Ä–≤—ã–µ –≥–æ—Å—Ç–∏", icon: "üöÄ", duration: "1 –¥–µ–Ω—å" }
  ];

  return (
    <motion.div
      ref={ref}
      initial={{ opacity: 0, y: 30 }}
      animate={inView ? { opacity: 1, y: 0 } : {}}
      transition={{ duration: 0.8, delay: 0.4 }}
      className="relative rounded-3xl bg-gradient-to-br from-white/5 to-white/10 backdrop-blur-xl border border-white/10 p-8 shadow-2xl overflow-hidden mb-16"
    >
      <div className="text-center mb-8">
        <h3 className="text-2xl font-bold text-foreground mb-4">–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</h3>
        <p className="text-muted-foreground">–û—Ç –∑–∞—è–≤–∫–∏ –¥–æ –ø–µ—Ä–≤—ã—Ö –≥–æ—Å—Ç–µ–π ‚Äî –≤—Å–µ–≥–æ 10-14 –¥–Ω–µ–π</p>
      </div>

      {/* Desktop Timeline */}
      <div className="hidden md:block">
        <div className="flex items-center justify-between relative">
          {/* Connection Line */}
          <motion.div
            className="absolute top-1/2 left-0 right-0 h-0.5 bg-gradient-to-r from-cyan-400 via-blue-500 to-purple-600 -translate-y-1/2"
            initial={{ scaleX: 0 }}
            animate={inView ? { scaleX: 1 } : {}}
            transition={{ delay: 0.6, duration: 1.5 }}
            style={{ originX: 0 }}
          />

          {steps.map((step, index) => (
            <div key={step.id} className="flex flex-col items-center relative z-10">
              {/* Step Node */}
              <motion.div
                initial={{ opacity: 0, scale: 0 }}
                animate={inView ? { opacity: 1, scale: 1 } : {}}
                transition={{ delay: 0.8 + index * 0.2, duration: 0.5, type: "spring" }}
                whileHover={{ scale: 1.1, rotate: 5 }}
                className="w-20 h-20 rounded-2xl bg-gradient-to-br from-cyan-400 to-blue-500 flex items-center justify-center shadow-2xl mb-4 relative"
              >
                <span className="text-2xl">{step.icon}</span>
                
                {/* Step Number */}
                <div className="absolute -top-2 -right-2 w-6 h-6 bg-gradient-to-r from-purple-400 to-pink-500 rounded-full flex items-center justify-center text-white text-xs font-bold">
                  {step.id}
                </div>
              </motion.div>

              {/* Step Info */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={inView ? { opacity: 1, y: 0 } : {}}
                transition={{ delay: 1 + index * 0.2, duration: 0.5 }}
                className="text-center max-w-[120px]"
              >
                <h4 className="font-semibold text-foreground mb-1">{step.title}</h4>
                <p className="text-xs text-muted-foreground mb-2">{step.desc}</p>
                <span className="text-xs px-2 py-1 bg-cyan-500/20 text-cyan-400 rounded-full border border-cyan-500/30">
                  {step.duration}
                </span>
              </motion.div>
            </div>
          ))}
        </div>
      </div>

      {/* Mobile Timeline */}
      <div className="md:hidden space-y-6">
        {steps.map((step, index) => (
          <motion.div
            key={step.id}
            initial={{ opacity: 0, x: -50 }}
            animate={inView ? { opacity: 1, x: 0 } : {}}
            transition={{ delay: 0.6 + index * 0.2, duration: 0.5 }}
            className="flex items-center gap-4"
          >
            <motion.div
              whileHover={{ scale: 1.1 }}
              className="w-16 h-16 rounded-2xl bg-gradient-to-br from-cyan-400 to-blue-500 flex items-center justify-center shadow-lg relative shrink-0"
            >
              <span className="text-xl">{step.icon}</span>
              <div className="absolute -top-1 -right-1 w-5 h-5 bg-gradient-to-r from-purple-400 to-pink-500 rounded-full flex items-center justify-center text-white text-xs font-bold">
                {step.id}
              </div>
            </motion.div>

            <div className="flex-1">
              <h4 className="font-semibold text-foreground mb-1">{step.title}</h4>
              <p className="text-sm text-muted-foreground mb-2">{step.desc}</p>
              <span className="text-xs px-2 py-1 bg-cyan-500/20 text-cyan-400 rounded-full border border-cyan-500/30">
                {step.duration}
              </span>
            </div>
          </motion.div>
        ))}
      </div>
    </motion.div>
  );
}

function ComplianceIndicators() {
  const ref = useRef<HTMLDivElement>(null);
  const inView = useInView(ref, { once: true, margin: "-50px" });

  const indicators = [
    { icon: "‚öñÔ∏è", value: 100, suffix: "%", label: "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–∞–∫–æ–Ω—É", color: "text-green-500" },
    { icon: "üõ°Ô∏è", value: 24, suffix: "", label: "–ú–µ—Å—è—Ü–∞ –≥–∞—Ä–∞–Ω—Ç–∏–∏", color: "text-blue-500" },
    { icon: "üìã", value: 15, suffix: "+", label: "–¢–∏–ø–æ–≤ –¥–æ–≥–æ–≤–æ—Ä–æ–≤", color: "text-purple-500" },
    { icon: "üîê", value: 99, suffix: "%", label: "–ó–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö", color: "text-orange-500" }
  ];

  return (
    <motion.div
      ref={ref}
      initial={{ opacity: 0, y: 30 }}
      animate={inView ? { opacity: 1, y: 0 } : {}}
      transition={{ duration: 0.8, delay: 0.4 }}
      className="relative rounded-3xl bg-gradient-to-br from-white/5 to-white/10 backdrop-blur-xl border border-white/10 p-8 shadow-2xl overflow-hidden mb-16"
    >
      <div className="text-center mb-8">
        <h3 className="text-2xl font-bold text-foreground mb-4">–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏</h3>
        <p className="text-muted-foreground">–ü–æ–ª–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É</p>
      </div>

      <div className="grid sm:grid-cols-2 lg:grid-cols-4 gap-6">
        {indicators.map((indicator, index) => (
          <motion.div
            key={indicator.label}
            initial={{ opacity: 0, y: 20, scale: 0.9 }}
            animate={inView ? { opacity: 1, y: 0, scale: 1 } : {}}
            transition={{ delay: 0.6 + index * 0.1, duration: 0.6, type: "spring" }}
            whileHover={{ scale: 1.05, y: -5 }}
            className="text-center p-6 rounded-2xl bg-gradient-to-br from-white/5 to-white/10 border border-white/10 hover:border-white/20 transition-all duration-300"
          >
            <div className="text-4xl mb-4">{indicator.icon}</div>
            <h4 className={`font-bold text-3xl mb-2 ${indicator.color}`}>
              <AnimatedCounter 
                value={indicator.value} 
                delay={0.8 + index * 0.1} 
                suffix={indicator.suffix} 
              />
            </h4>
            <p className="text-sm text-muted-foreground">{indicator.label}</p>
          </motion.div>
        ))}
      </div>
    </motion.div>
  );
}

export function ModernLegal() {
  const containerRef = useRef<HTMLDivElement>(null);
  const inView = useInView(containerRef, { once: true, margin: "-100px" });

  const legalDocuments = [
    {
      title: "–î–æ–≥–æ–≤–æ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
      type: "–û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç",
      icon: "üìã",
      description: "–¢–∏–ø–æ–≤–æ–π –¥–æ–≥–æ–≤–æ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞–º–∏ —Å —á–µ—Ç–∫–æ –ø—Ä–æ–ø–∏—Å–∞–Ω–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏ –∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—è–º–∏ —Å—Ç–æ—Ä–æ–Ω.",
      color: "blue",
      requirements: [
        "–ü—Ä–µ–¥–º–µ—Ç: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞",
        "–°—Ä–æ–∫–∏: –º–∏–Ω–∏–º—É–º 11 –º–µ—Å—è—Ü–µ–≤, –∞–≤—Ç–æ–ø—Ä–æ–ª–æ–Ω–≥–∞—Ü–∏—è",
        "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å —Å—Ç–æ—Ä–æ–Ω –∏ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ —Ä–∏—Å–∫–æ–≤",
        "–ü–æ—Ä—è–¥–æ–∫ —Ä–∞—Å—á–µ—Ç–æ–≤ –∏ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏",
        "–£—Å–ª–æ–≤–∏—è —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞"
      ],
      benefits: [
        "–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞",
        "–ó–∞—â–∏—Ç–∞ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞",
        "–ß–µ—Ç–∫–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
        "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏—è"
      ],
      downloadable: true
    },
    {
      title: "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –æ–±—ä–µ–∫—Ç—É",
      type: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è",
      icon: "üè†",
      description: "–ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—é –Ω–æ—Ä–º–∞–º –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π —Å–¥–∞—á–∏.",
      color: "green",
      requirements: [
        "–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è: –º–µ–±–µ–ª—å, —Ç–µ—Ö–Ω–∏–∫–∞, —Ç–µ–∫—Å—Ç–∏–ª—å",
        "–ü–æ–∂–∞—Ä–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∞–≤–∞—Ä–∏–π–Ω—ã–µ –≤—ã—Ö–æ–¥—ã",
        "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–∞–Ω–∏—Ç–∞—Ä–Ω—ã–º –Ω–æ—Ä–º–∞–º",
        "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏",
        "–°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
      ],
      benefits: [
        "–í—ã—Å–æ–∫–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∏ –æ—Ç –≥–æ—Å—Ç–µ–π",
        "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π",
        "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤—Å–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º",
        "–ë—ã—Å—Ç—Ä–∞—è –æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π"
      ],
      downloadable: true
    },
    {
      title: "–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏",
      type: "–ó–∞—â–∏—Ç–∞ —Ä–∏—Å–∫–æ–≤",
      icon: "üõ°Ô∏è",
      description: "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è –∏–º—É—â–µ—Å—Ç–≤–∞ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ —Å –ø–æ–ª–Ω—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º —Ä–∏—Å–∫–æ–≤.",
      color: "purple",
      requirements: [
        "–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –∏–º—É—â–µ—Å—Ç–≤–∞ –æ—Ç –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π",
        "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥ —Ç—Ä–µ—Ç—å–∏–º–∏ –ª–∏—Ü–∞–º–∏",
        "–ü–æ–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä—Å-–º–∞–∂–æ—Ä–Ω—ã—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤",
        "–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –£–ö",
        "–ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–æ–Ω–¥"
      ],
      benefits: [
        "–ü–æ–ª–Ω–∞—è –∑–∞—â–∏—Ç–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π",
        "–ë—ã—Å—Ç—Ä—ã–µ —Å—Ç—Ä–∞—Ö–æ–≤—ã–µ –≤—ã–ø–ª–∞—Ç—ã",
        "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–∏—Å–∫–∏",
        "–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞"
      ],
      downloadable: false
    },
    {
      title: "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ 152-–§–ó",
      type: "–ó–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö",
      icon: "üîê",
      description: "–ü–æ–ª–Ω–æ–µ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ø–æ –∑–∞—â–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≥–æ—Å—Ç–µ–π –∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤.",
      color: "orange",
      requirements: [
        "–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö",
        "–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
        "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º",
        "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö",
        "–ü—Ä–∞–≤–æ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö"
      ],
      benefits: [
        "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É",
        "–î–æ–≤–µ—Ä–∏–µ –≥–æ—Å—Ç–µ–π –∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤",
        "–ó–∞—â–∏—Ç–∞ –æ—Ç —à—Ç—Ä–∞—Ñ–æ–≤",
        "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
      ],
      downloadable: false
    }
  ];

  return (
    <section className="relative py-12 sm:py-16 overflow-hidden">
      {/* Background Elements */}
      <div className="absolute inset-0">
        <div className="absolute inset-0 bg-gradient-to-b from-background via-muted/20 to-background" />
        
        {/* Floating Orbs */}
        <motion.div
          className="absolute w-96 h-96 rounded-full bg-gradient-to-r from-red-400/8 to-orange-500/12 blur-3xl"
          animate={{
            x: [0, 140, 0],
            y: [0, -90, 0],
          }}
          transition={{
            duration: 35,
            repeat: Infinity,
            ease: "linear"
          }}
          style={{ left: '5%', top: '8%' }}
        />
        
        <motion.div
          className="absolute w-80 h-80 rounded-full bg-gradient-to-r from-purple-400/8 to-pink-500/12 blur-3xl"
          animate={{
            x: [0, -130, 0],
            y: [0, 110, 0],
          }}
          transition={{
            duration: 30,
            repeat: Infinity,
            ease: "linear"
          }}
          style={{ right: '8%', bottom: '12%' }}
        />
      </div>

      <div ref={containerRef} className="relative mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
        {/* Section Header */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8 }}
          className="text-center mb-16"
        >
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            animate={inView ? { opacity: 1, scale: 1 } : {}}
            transition={{ delay: 0.2, duration: 0.6 }}
            className="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-gradient-to-r from-red-500/10 to-orange-500/10 border border-red-500/20 text-red-600 text-sm font-medium mb-6 backdrop-blur-sm"
          >
            <span className="w-2 h-2 bg-red-400 rounded-full animate-pulse" />
            –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞
          </motion.div>
          
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            animate={inView ? { opacity: 1, y: 0 } : {}}
            transition={{ delay: 0.4, duration: 0.6 }}
            className="text-3xl sm:text-4xl lg:text-5xl font-bold text-foreground mb-4"
          >
            <span className="bg-gradient-to-r from-red-400 to-orange-600 bg-clip-text text-transparent">–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π</span> –±–ª–æ–∫
          </motion.h2>
          
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            animate={inView ? { opacity: 1, y: 0 } : {}}
            transition={{ delay: 0.6, duration: 0.6 }}
            className="text-lg text-muted-foreground max-w-4xl mx-auto leading-relaxed"
          >
            –í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É. –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è, 
            –ø–æ–ª–Ω–∞—è –∑–∞—â–∏—Ç–∞ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –∏ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π.
          </motion.p>
        </motion.div>

        {/* Compliance Indicators */}
        <ComplianceIndicators />

        {/* Legal Documents Grid */}
        <motion.div
          initial={{ opacity: 0 }}
          animate={inView ? { opacity: 1 } : {}}
          transition={{ delay: 1.2, duration: 0.8 }}
          className="grid md:grid-cols-2 gap-8 mb-16"
        >
          {legalDocuments.map((document, index) => (
            <LegalDocumentCard key={document.title} document={document} index={index} />
          ))}
        </motion.div>

        {/* Onboarding Process */}
        <OnboardingProcess />

        {/* CTA Section */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ delay: 2.2, duration: 0.8 }}
          className="text-center rounded-3xl bg-gradient-to-br from-white/5 to-white/10 backdrop-blur-xl border border-white/10 p-8 sm:p-12 shadow-2xl"
        >
          <h3 className="text-2xl sm:text-3xl font-bold text-foreground mb-4">
            –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ?
          </h3>
          <p className="text-muted-foreground mb-8 max-w-2xl mx-auto">
            –ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —é—Ä–∏—Å—Ç–∞ –∏ —É–∑–Ω–∞–π—Ç–µ –≤—Å–µ –¥–µ—Ç–∞–ª–∏ 
            —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞. –ü–µ—Ä–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ.
          </p>
          
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="px-8 py-4 rounded-xl bg-gradient-to-r from-red-500 to-orange-600 text-white font-semibold hover:from-red-400 hover:to-orange-500 transition-all shadow-lg"
            >
              –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É
            </motion.button>
            
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="px-8 py-4 rounded-xl border border-white/30 text-foreground font-semibold hover:bg-white/10 transition-all"
            >
              –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è
            </motion.button>
          </div>
        </motion.div>
      </div>
    </section>
  );
}
