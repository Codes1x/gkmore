#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: bash status-check.sh

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Next.js –ø—Ä–æ–µ–∫—Ç–∞..."
echo "=================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${RED}‚ùå $2${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
check_warning() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è $2${NC}"
    fi
}

echo ""
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2
pm2 describe corp-site &> /dev/null
check_status $? "PM2 –ø—Ä–æ—Ü–µ—Å—Å corp-site –∑–∞–ø—É—â–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx
systemctl is-active --quiet nginx
check_status $? "nginx —Å–µ—Ä–≤–∏—Å –∞–∫—Ç–∏–≤–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
ss -tulpn | grep :3000 &> /dev/null
check_status $? "–ü–æ—Ä—Ç 3000 (Next.js) –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"

ss -tulpn | grep :80 &> /dev/null  
check_status $? "–ü–æ—Ä—Ç 80 (HTTP) –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"

ss -tulpn | grep :443 &> /dev/null
check_warning $? "–ü–æ—Ä—Ç 443 (HTTPS) –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"

echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
curl -f -s http://localhost:3000 > /dev/null
check_status $? "Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ localhost:3000"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ nginx
curl -f -s http://localhost > /dev/null
check_status $? "nginx –ø—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç (localhost:80)"

echo ""
echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Å—É—Ä—Å–∞—Ö:"

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
MEMORY_USAGE=$(free | grep Mem | awk '{printf("%.1f", $3*100/$2)}')
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: $MEMORY_USAGE%"

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞
DISK_USAGE=$(df -h / | awk 'NR==2{print $5}')
echo "üíΩ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: $DISK_USAGE"

# –ó–∞–≥—Ä—É–∑–∫–∞ CPU
CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{printf("%.1f", 100 - $1)}')
echo "üñ•Ô∏è –ó–∞–≥—Ä—É–∑–∫–∞ CPU: $CPU_USAGE%"

echo ""
echo "üìã –°—Ç–∞—Ç—É—Å PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:"
pm2 status corp-site 2>/dev/null || echo "PM2 –ø—Ä–æ—Ü–µ—Å—Å corp-site –Ω–µ –Ω–∞–π–¥–µ–Ω"

echo ""
echo "üîí SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç:"
if command -v certbot &> /dev/null; then
    CERT_INFO=$(certbot certificates 2>/dev/null | grep -A 1 "Certificate Name" | tail -1)
    if [[ -n "$CERT_INFO" ]]; then
        echo -e "${GREEN}‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        echo "$CERT_INFO"
    else
        echo -e "${YELLOW}‚ö†Ô∏è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è certbot –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
fi

echo ""
echo "üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:"
if [ -d "/var/www/corp-site" ]; then
    echo -e "${GREEN}‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    echo "üì¶ –†–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞: $(du -sh /var/www/corp-site 2>/dev/null | cut -f1)"
    
    if [ -f "/var/www/corp-site/corp-site/package.json" ]; then
        echo -e "${GREEN}‚úÖ package.json –Ω–∞–π–¥–µ–Ω${NC}"
        PROJECT_NAME=$(grep '"name"' /var/www/corp-site/corp-site/package.json | cut -d'"' -f4)
        echo "üè∑Ô∏è –ò–º—è –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_NAME"
    fi
    
    if [ -d "/var/www/corp-site/corp-site/.next" ]; then
        echo -e "${GREEN}‚úÖ Build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è .next —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
        BUILD_DATE=$(stat -c %y /var/www/corp-site/corp-site/.next 2>/dev/null | cut -d' ' -f1)
        echo "üî® –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–±–æ—Ä–∫–∏: $BUILD_DATE"
    else
        echo -e "${RED}‚ùå Build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è .next –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
    fi
else
    echo -e "${RED}‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
fi

echo ""
echo "üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫):"
echo "--- PM2 –ª–æ–≥–∏ ---"
tail -n 5 /var/log/pm2/corp-site.log 2>/dev/null || echo "–õ–æ–≥–∏ PM2 –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

echo "--- nginx error –ª–æ–≥–∏ ---"  
tail -n 5 /var/log/nginx/corp-site-error.log 2>/dev/null || echo "–õ–æ–≥–∏ nginx error –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

echo ""
echo "üåç –í–Ω–µ—à–Ω–∏–π IP –∞–¥—Ä–µ—Å:"
EXTERNAL_IP=$(curl -s -4 ifconfig.me 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å")
echo "üåê –í–∞—à —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://$EXTERNAL_IP"

echo ""
echo "=================================================="
echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "pm2 logs corp-site       - –ø–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "pm2 restart corp-site    - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"  
echo "systemctl status nginx   - —Å—Ç–∞—Ç—É—Å nginx"
echo "nginx -t                 - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx"
echo "corp-site-stats.sh       - –ø–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥)"
